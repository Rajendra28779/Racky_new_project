import { formatDate } from '@angular/common';
import { Component, OnInit } from '@angular/core';
import { NavigationExtras, Router } from '@angular/router';
import jsPDF from 'jspdf';
import autoTable from 'jspdf-autotable';
import { SessionStorageService } from 'src/app/services/session-storage.service';
import Swal from 'sweetalert2';
import { HeaderService } from '../header.service';
import { DcCdmomappingService } from '../Services/dc-cdmomapping.service';
import { SnocreateserviceService } from '../Services/snocreateservice.service';
import { TableUtil } from '../util/TableUtil';

@Component({
  selector: 'app-mobile-attendance-master-view',
  templateUrl: './mobile-attendance-master-view.component.html',
  styleUrls: ['./mobile-attendance-master-view.component.scss']
})
export class MobileAttendanceMasterViewComponent implements OnInit {
  user:any;
  list:any=[];
  showPegi:any=false;
  pageElement:any;
  currentPage:any;
  count:any=0;
  txtsearchDate:any;

  constructor(private dcService: DcCdmomappingService,
    private sessionService: SessionStorageService,
    public headerService: HeaderService,
    private snoService: SnocreateserviceService,
    private route:Router) { }

  ngOnInit(): void {
    this.headerService.setTitle('Mobile Attendance Location');
    this.user =  this.sessionService.decryptSessionData("user");
    this.search();
  }

  search(){
    this.dcService.getmobileattendancemaster().subscribe((data:any)=>{
    if(data.status==200){
      this.list = data.data;
      this.count=this.list.length;
      if(this.count>0){
        this.showPegi=true;
        this.currentPage=1;
        this.pageElement=100;
      }else{
        this.showPegi=false;
      }
    }else{
      this.swal("Error", "Something Went Wrong", 'error');
    }
  },
  (error) => console.log(error));
  }

  swal(title: any, text: any, icon: any) {
    Swal.fire({
      icon: icon,
      title: title,
      text: text
    });
  }

  report: any = [];
heading = [['Sl No', 'State Name', 'District Name', 'Location Name', 'Created By', 'Created On', 'Status']];

downloadList(no: any) {
    let generatedOn = formatDate(new Date(), 'dd-MMM-yyyy hh:mm:ss a', 'en-US').toString();
    let generatedBy = this.user.fullName;
    this.report = [];
    let item: any;

    for (let i = 0; i < this.list.length; i++) {
        item = this.list[i];
        let row = [];
        row.push(i + 1);
        row.push(item.stateName);
        row.push(item.districtName);
        row.push(item.locationName);
        row.push(item.createdBy);
        row.push(item.createdOn);
        row.push(item.statusFlag == 0 ? 'Active' : 'InActive');
        this.report.push(row);
    }

    if (no == 1) {
        let filter = [];
        TableUtil.exportListToExcelWithFilter(this.report, 'Mobile Attendance Location', this.heading, filter);
    } else {
        if (this.report == null || this.report.length == 0) {
            this.swal("Info", "No Record Found", "info");
            return;
        }
        let doc = new jsPDF('p', 'mm', [297, 210]);
        doc.setFontSize(20);
        doc.text("Mobile Attendance Location", 60, 15);
        doc.setFontSize(13);
        doc.text('Generated On: ' + generatedOn, 15, 25);
        doc.text('Generated By: ' + generatedBy, 15, 32);
        autoTable(doc, {
            head: this.heading,
            body: this.report,
            theme: 'grid',
            startY: 36,
            headStyles: {
                fillColor: [26, 99, 54]
            },
            columnStyles: {
                0: { cellWidth: 10 },
            }
        });
        doc.save('Mobile_Attendance_Location.pdf');
    }
}

edit(item:any ){
  let navigateExtras: NavigationExtras = {
    state: {
      locationid: item.locationId,
      state: item.stateCode,
      dist: item.districtCode,
      location: item.locationName,
      statusflag: item.statusFlag,
    }
  };
  this.route.navigate(['application/mobileattendancemaster'], navigateExtras);
}


}
